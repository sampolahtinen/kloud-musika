### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Artist {
  country: String
  id: String!
  name: String!
}

input ArtistCreateInput {
  country: String
  id: String
  name: String!
  tracks: TrackCreateNestedManyWithoutArtistInput
}

input ArtistCreateNestedOneWithoutTracksInput {
  connect: ArtistWhereUniqueInput
  connectOrCreate: ArtistCreateOrConnectWithoutTracksInput
  create: ArtistCreateWithoutTracksInput
}

input ArtistCreateOrConnectWithoutTracksInput {
  create: ArtistCreateWithoutTracksInput!
  where: ArtistWhereUniqueInput!
}

input ArtistCreateWithoutTracksInput {
  country: String
  id: String
  name: String!
}

input ArtistWhereInput {
  AND: [ArtistWhereInput!]
  NOT: [ArtistWhereInput!]
  OR: [ArtistWhereInput!]
  country: StringNullableFilter
  id: StringFilter
  name: StringFilter
  tracks: TrackListRelationFilter
}

input ArtistWhereUniqueInput {
  id: String
  name: String
}

type Mutation {
  createOneArtist(data: ArtistCreateInput!): Artist!
  createOneTrack(data: TrackCreateInput!): Track!
  createOneTrackMetadata(data: TrackMetadataCreateInput!): TrackMetadata!
  createOneUser(data: UserCreateInput!): User!
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Query {
  artists(after: ArtistWhereUniqueInput, before: ArtistWhereUniqueInput, first: Int, last: Int, where: ArtistWhereInput): [Artist!]!
  trackMetadata(after: TrackMetadataWhereUniqueInput, before: TrackMetadataWhereUniqueInput, first: Int, last: Int, where: TrackMetadataWhereInput): [TrackMetadata!]!
  tracks(after: TrackWhereUniqueInput, before: TrackWhereUniqueInput, first: Int, last: Int, where: TrackWhereInput): [Track!]!
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int, where: UserWhereInput): [User!]!
}

enum QueryMode {
  default
  insensitive
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Track {
  artist: Artist!
  fileId: String
  id: String!
  metadata: TrackMetadata
  title: String!
}

input TrackCreateInput {
  artist: ArtistCreateNestedOneWithoutTracksInput!
  fileId: String
  id: String
  metadata: TrackMetadataCreateNestedOneWithoutTrackInput
  title: String!
}

input TrackCreateManyArtistInput {
  fileId: String
  id: String
  metadataId: String
  title: String!
}

input TrackCreateManyArtistInputEnvelope {
  data: [TrackCreateManyArtistInput!]
  skipDuplicates: Boolean
}

input TrackCreateNestedManyWithoutArtistInput {
  connect: [TrackWhereUniqueInput!]
  connectOrCreate: [TrackCreateOrConnectWithoutArtistInput!]
  create: [TrackCreateWithoutArtistInput!]
  createMany: TrackCreateManyArtistInputEnvelope
}

input TrackCreateNestedOneWithoutMetadataInput {
  connect: TrackWhereUniqueInput
  connectOrCreate: TrackCreateOrConnectWithoutMetadataInput
  create: TrackCreateWithoutMetadataInput
}

input TrackCreateOrConnectWithoutArtistInput {
  create: TrackCreateWithoutArtistInput!
  where: TrackWhereUniqueInput!
}

input TrackCreateOrConnectWithoutMetadataInput {
  create: TrackCreateWithoutMetadataInput!
  where: TrackWhereUniqueInput!
}

input TrackCreateWithoutArtistInput {
  fileId: String
  id: String
  metadata: TrackMetadataCreateNestedOneWithoutTrackInput
  title: String!
}

input TrackCreateWithoutMetadataInput {
  artist: ArtistCreateNestedOneWithoutTracksInput!
  fileId: String
  id: String
  title: String!
}

input TrackListRelationFilter {
  every: TrackWhereInput
  none: TrackWhereInput
  some: TrackWhereInput
}

type TrackMetadata {
  direct_link: String!
  id: String!
  original_file_path: String!
  track: Track
}

input TrackMetadataCreateInput {
  direct_link: String!
  id: String
  original_file_path: String!
  track: TrackCreateNestedOneWithoutMetadataInput
}

input TrackMetadataCreateNestedOneWithoutTrackInput {
  connect: TrackMetadataWhereUniqueInput
  connectOrCreate: TrackMetadataCreateOrConnectWithoutTrackInput
  create: TrackMetadataCreateWithoutTrackInput
}

input TrackMetadataCreateOrConnectWithoutTrackInput {
  create: TrackMetadataCreateWithoutTrackInput!
  where: TrackMetadataWhereUniqueInput!
}

input TrackMetadataCreateWithoutTrackInput {
  direct_link: String!
  id: String
  original_file_path: String!
}

input TrackMetadataWhereInput {
  AND: [TrackMetadataWhereInput!]
  NOT: [TrackMetadataWhereInput!]
  OR: [TrackMetadataWhereInput!]
  direct_link: StringFilter
  id: StringFilter
  original_file_path: StringFilter
  track: TrackWhereInput
}

input TrackMetadataWhereUniqueInput {
  id: String
}

input TrackWhereInput {
  AND: [TrackWhereInput!]
  NOT: [TrackWhereInput!]
  OR: [TrackWhereInput!]
  artist: ArtistWhereInput
  artistId: StringFilter
  fileId: StringNullableFilter
  id: StringFilter
  metadata: TrackMetadataWhereInput
  metadataId: StringNullableFilter
  title: StringFilter
}

input TrackWhereUniqueInput {
  fileId: String
  id: String
}

type User {
  email: String!
  id: String!
  name: String
}

input UserCreateInput {
  email: String!
  id: String
  name: String
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  email: StringFilter
  id: StringFilter
  name: StringNullableFilter
}

input UserWhereUniqueInput {
  email: String
  id: String
}
